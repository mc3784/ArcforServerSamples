{
    "$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "String"
        },
        "networkInterfaceName1": {
            "type": "String"
        },
        "enableAcceleratedNetworking": {
            "type": "Bool"
        },
        "networkSecurityGroupName": {
            "type": "String"
        },
        "networkSecurityGroupRules": {
            "type": "Array"
        },
        "subnetName": {
            "type": "String"
        },
        "virtualNetworkName": {
            "type": "String"
        },
        "addressPrefixes": {
            "type": "Array"
        },
        "subnets": {
            "type": "Array"
        },
        "publicIpAddressName1": {
            "type": "String"
        },
        "publicIpAddressType": {
            "type": "String"
        },
        "publicIpAddressSku": {
            "type": "String"
        },
        "pipDeleteOption": {
            "type": "String"
        },
        "virtualMachineName": {
            "type": "String"
        },
        "virtualMachineName1": {
            "type": "String"
        },
        "virtualMachineComputerName1": {
            "type": "String"
        },
        "virtualMachineRG": {
            "type": "String"
        },
        "osDiskType": {
            "type": "String"
        },
        "osDiskDeleteOption": {
            "type": "String"
        },
        "virtualMachineSize": {
            "type": "String"
        },
        "nicDeleteOption": {
            "type": "String"
        },
        "hibernationEnabled": {
            "type": "Bool"
        },
        "adminUsername": {
            "type": "String"
        },
        "adminPublicKey": {
            "type": "SecureString"
        },
        "enablePeriodicAssessment": {
            "type": "String"
        },
        "securityType": {
            "type": "String"
        },
        "secureBoot": {
            "type": "Bool"
        },
        "vTPM": {
            "type": "Bool"
        },
        "virtualMachine1Zone": {
            "type": "String"
        },
        "identityName": {
            "defaultValue": "win-arctest01453",
            "type": "String"
        },
        "identityLocation": {
            "defaultValue": "canadacentral",
            "type": "String"
        },
        "roleNameGuid": {
            "defaultValue": "[newGuid()]",
            "type": "String",
            "metadata": {
                "description": "A GUID used to identify the role assignment. Do not use newGuid() function for this value, generate a guid and use that value. Creating a newGuid() for the same role assignment each time will fail the ARM template."
            }
        },
        "builtInRoleType": {
            "defaultValue": "Contributor",
            "allowedValues": [
                "Owner",
                "ArcAdmin",
                "Contributor",
                "Reader"
            ],
            "type": "String",
            "metadata": {
                "description": "Built-in role to assign"
            }
        },
        "cloudEnv": {
            "defaultValue": "AzureCloud",
            "allowedValues": [
                "AzureCloud",
                "AzureUSGovernment"
            ],
            "type": "String",
            "metadata": {
                "description": "Set to AzureCloud if running in Public cloud or to AzureUSGovernment if running in Fairfax"
            }
        }
    },
    "variables": {
        "nsgId": "[resourceId(resourceGroup().name, 'Microsoft.Network/networkSecurityGroups', parameters('networkSecurityGroupName'))]",
        "vnetName": "[parameters('virtualNetworkName')]",
        "vnetId": "[resourceId(resourceGroup().name,'Microsoft.Network/virtualNetworks', parameters('virtualNetworkName'))]",
        "subnetRef": "[concat(variables('vnetId'), '/subnets/', parameters('subnetName'))]",
        "Owner": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '8e3af657-a8ff-443c-a75c-2fe8c4bcb635')]",
        "ArcAdmin": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'cd570a14-e51a-42ad-bac8-bafd67325302')]",
        "Contributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'b24988ac-6180-42a0-ab88-20f7382dd24c')]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]",
        "AzureServiceDeployReleaseManagementContributor": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', '21d96096-b162-414a-8302-d8354f9d91b2')]"
    },
    "resources": [
        {
            "type": "Microsoft.ManagedIdentity/userAssignedIdentities",
            "apiVersion": "2023-01-31",
            "name": "[parameters('identityName')]",
            "location": "[parameters('identityLocation')]"
        },
        {
            "type": "Microsoft.Resources/deploymentScripts",
            "apiVersion": "2020-10-01",
            "name": "WaitSection",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName'))]"
            ],
            "kind": "AzurePowerShell",
            "properties": {
                "azPowerShellVersion": "3.0",
                "scriptContent": "start-sleep -Seconds 30",
                "cleanupPreference": "Always",
                "retentionInterval": "PT1H"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2018-09-01-preview",
            "name": "[parameters('roleNameGuid')]",
            "dependsOn": [
                "[resourceId('Microsoft.Resources/deploymentScripts', 'WaitSection')]",
                "[concat('Microsoft.ManagedIdentity/userAssignedIdentities/', parameters('identityName'))]"
            ],
            "properties": {
                "roleDefinitionId": "[variables(parameters('builtInRoleType'))]",
                "principalId": "[reference(resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31', 'Full').Properties.principalId]"
            }
        },
        {
            "type": "Microsoft.Network/networkInterfaces",
            "apiVersion": "2022-11-01",
            "name": "[parameters('networkInterfaceName1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('networkSecurityGroupName'))]",
                "[concat('Microsoft.Network/virtualNetworks/', parameters('virtualNetworkName'))]",
                "[concat('Microsoft.Network/publicIpAddresses/', parameters('publicIpAddressName1'))]"
            ],
            "properties": {
                "ipConfigurations": [
                    {
                        "name": "ipconfig1",
                        "properties": {
                            "subnet": {
                                "id": "[variables('subnetRef')]"
                            },
                            "privateIPAllocationMethod": "Dynamic",
                            "publicIpAddress": {
                                "id": "[resourceId(resourceGroup().name, 'Microsoft.Network/publicIpAddresses', parameters('publicIpAddressName1'))]",
                                "properties": {
                                    "deleteOption": "[parameters('pipDeleteOption')]"
                                }
                            }
                        }
                    }
                ],
                "enableAcceleratedNetworking": "[parameters('enableAcceleratedNetworking')]",
                "networkSecurityGroup": {
                    "id": "[variables('nsgId')]"
                }
            }
        },
        {
            "type": "Microsoft.Network/networkSecurityGroups",
            "apiVersion": "2020-05-01",
            "name": "[parameters('networkSecurityGroupName')]",
            "location": "[parameters('location')]",
            "properties": {
                "securityRules": "[parameters('networkSecurityGroupRules')]"
            }
        },
        {
            "type": "Microsoft.Network/virtualNetworks",
            "apiVersion": "2024-01-01",
            "name": "[parameters('virtualNetworkName')]",
            "location": "[parameters('location')]",
            "properties": {
                "addressSpace": {
                    "addressPrefixes": "[parameters('addressPrefixes')]"
                },
                "subnets": "[parameters('subnets')]"
            }
        },
        {
            "type": "Microsoft.Network/publicIpAddresses",
            "apiVersion": "2020-08-01",
            "name": "[parameters('publicIpAddressName1')]",
            "location": "[parameters('location')]",
            "sku": {
                "name": "[parameters('publicIpAddressSku')]"
            },
            "zones": [
                "[parameters('virtualMachine1Zone')]"
            ],
            "properties": {
                "publicIpAllocationMethod": "[parameters('publicIpAddressType')]"
            }
        },
        {
            "type": "Microsoft.Compute/virtualMachines",
            "apiVersion": "2024-03-01",
            "name": "[parameters('virtualMachineName1')]",
            "location": "[parameters('location')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkInterfaces/', parameters('networkInterfaceName1'))]"
            ],
            "zones": [
                "[parameters('virtualMachine1Zone')]"
            ],
            "properties": {
                "hardwareProfile": {
                    "vmSize": "[parameters('virtualMachineSize')]"
                },
                "storageProfile": {
                    "osDisk": {
                        "createOption": "fromImage",
                        "managedDisk": {
                            "storageAccountType": "[parameters('osDiskType')]"
                        },
                        "deleteOption": "[parameters('osDiskDeleteOption')]"
                    },
                    "imageReference": {
                        "publisher": "canonical",
                        "offer": "ubuntu-24_04-lts",
                        "sku": "server",
                        "version": "latest"
                    }
                },
                "networkProfile": {
                    "networkInterfaces": [
                        {
                            "id": "[resourceId('Microsoft.Network/networkInterfaces', parameters('networkInterfaceName1'))]",
                            "properties": {
                                "deleteOption": "[parameters('nicDeleteOption')]"
                            }
                        }
                    ]
                },
                "securityProfile": {
                    "securityType": "[parameters('securityType')]",
                    "uefiSettings": {
                        "secureBootEnabled": "[parameters('secureBoot')]",
                        "vTpmEnabled": "[parameters('vTPM')]"
                    }
                },
                "additionalCapabilities": {
                    "hibernationEnabled": false
                },
                "osProfile": {
                    "computerName": "[parameters('virtualMachineComputerName1')]",
                    "adminUsername": "[parameters('adminUsername')]",
                    "linuxConfiguration": {
                        "disablePasswordAuthentication": true,
                        "ssh": {
                            "publicKeys": [
                                {
                                    "path": "[concat('/home/', parameters('adminUsername'), '/.ssh/authorized_keys')]",
                                    "keyData": "[parameters('adminPublicKey')]"
                                }
                            ]
                        },
                        "patchSettings": {
                            "assessmentMode": "[parameters('enablePeriodicAssessment')]",
                            "patchMode": "ImageDefault"
                        }
                    }
                },
                "diagnosticsProfile": {
                    "bootDiagnostics": {
                        "enabled": true
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "apiVersion": "2019-10-01",
            "name": "CSEDeployment",
            "dependsOn": [
                "[resourceId('Microsoft.Compute/virtualMachines', parameters('virtualMachineName'))]"
            ],
            "properties": {
                "expressionEvaluationOptions": {
                    "scope": "outer"
                },
                "mode": "Incremental",
                "template": {
                    "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
                    "contentVersion": "1.0.0.0",
                    "variables": {
                        "principalId": "[reference(resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31', 'Full').Properties.principalId]"
                    },
                    "resources": [
                        {
                            "type": "Microsoft.Resources/deploymentScripts",
                            "apiVersion": "2020-10-01",
                            "kind": "AzurePowerShell",
                            "name": "InnerWaitSection",
                            "location": "[parameters('location')]",
                            "properties": {
                                "azPowerShellVersion": "3.0",
                                "scriptContent": "start-sleep -Seconds 30",
                                "cleanupPreference": "Always",
                                "retentionInterval": "PT1H"
                            }
                        },
                        {
                            "type": "Microsoft.Compute/virtualMachines/extensions",
                            "apiVersion": "2015-06-15",
                            "name": "[format('{0}/{1}', parameters('virtualMachineName'), 'InstallArc')]",
                            "location": "[parameters('location')]",
                            "dependsOn": [
                                "[resourceId('Microsoft.Resources/deploymentScripts', 'InnerWaitSection')]"
                            ],
                            "properties": {
                                "publisher": "Microsoft.Azure.Extensions",
                                "type": "CustomScript",
                                "typeHandlerVersion": "2.0",
                                "autoUpgradeMinorVersion": true,
                                "settings": {},
                                "protectedSettings": {
                                    "commandToExecute": "[concat('./InstallArcForServerWithToken.sh -principalId ', reference(resourceId(resourceGroup().name, 'Microsoft.ManagedIdentity/userAssignedIdentities', parameters('identityName')), '2023-01-31', 'Full').Properties.principalId)]",
                                    "fileUris": [
                                        "https://raw.githubusercontent.com/mc3784/ArcforServerSamples/refs/heads/main/InstallArcForServerWithToken.sh"
                                    ]
                                }
                            }
                        }
                    ]
                }
            }
        }
    ],
    "outputs": {
        "adminUsername": {
            "type": "String",
            "value": "[parameters('adminUsername')]"
        }
    }
}